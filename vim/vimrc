filetype off
filetype indent plugin off
set runtimepath+=/usr/share/go/misc/vim
filetype indent plugin on
syntax on

set nocompatible
set t_Co=16
execute pathogen#infect()

set showmatch               " Show matching brackets
set ignorecase              " Ignore case in search patterns
set number                  " Show line numbers
set hidden                  " Hide buffers when they are abandoned
set nobackup                " backups are stupid, use Git
set nowritebackup           " backups are stupid, use Git
set noswapfile              " swp files are stupid, use Git
set history=1000
set undolevels=1000
set wildignore=*.pyc
set pastetoggle=<F2>        " toggles auto-indent for pasting large blocks of text
"set clipboard=unnamedplus   " Attaches X11 clipboard to Vim
"set autowrite               " Automatically save before commands like :next and :make

set showmatch               " When a bracket is inserted, briefly jump to the matching one
set hlsearch                " highlighted search
set incsearch               " search while typing

set backspace=indent,eol,start      " fix backspace
set mouse=                  " Enable mouse usage (all modes)

set smartcase               " ignore case UNLESS capital letter used
set autoindent
set smartindent
set tabstop=4               " Number of spaces that a <Tab> in the file counts for
set shiftwidth=4            " Number of spaces to use for each step of (auto)indent
set expandtab               " Use the appropriate number of spaces to insert a <Tab>
                            " <Ctrl>-V, <Tab> for real tab
set smarttab                " When on, a <Tab> in front of a line inserts blanks
                            " according to 'shiftwidth'. 'tabstop' is used in other
                            " places. A <BS> will delete a 'shiftwidth' worth of space
                            " at the start of the line
" Airline Setup {
set laststatus=2
"set noshowmode
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_symbols = {}
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme = 'bubblegum'


let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''

" unicode symbols
"let g:airline_left_sep = '»'
"let g:airline_left_sep = '▶'
"let g:airline_right_sep = '«'
"let g:airline_right_sep = '◀'
"let g:airline_symbols.linenr = '␊'
"let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
"let g:airline_symbols.paste = 'Þ'
"let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" powerline symbols
"let g:airline_left_sep = ''
"let g:airline_left_alt_sep = ''
"let g:airline_right_sep = ''
"let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''
" } // Airline

" Enable markdown syntax highlighting for md files
au BufRead,BufNewFile *.md set filetype=markdown

" LaTeX-BoX
let g:tex_flavor='xelatex'
let g:LatexBox_latexmk_options = "-pvc -pdfps"
let g:LatexBox_latexmk_async=1          " run with vim --servername latex *.tex

" Macros
map \a :w<CR>:!make clean;make;./test<CR>
map \s :w<CR>:!./%<CR>
map \v :w<CR>:!make clean;make;valgrind ./test<CR>
map \o :w<CR>:!go test<CR>
map \g :w<CR>:!go run %<CR>
map \p :w<CR>:!python %<CR>
map \t :w<CR>:!go run main.go<CR>
map \c :w<CR>:!make clean;make;./test<CR>
